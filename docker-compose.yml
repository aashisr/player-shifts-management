services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: backend
    environment:
      MYSQL_DB_HOST: db
      MYSQL_DB_PORT: ${MYSQL_DB_PORT}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "5000:5000"  # Expose the backend port
    volumes:
      - ./backend:/app  # Mount the backend source code for hot reloading
      - /app/node_modules  # Ensure node_modules is not overwritten
    networks:
      - app-network
    depends_on:
      - db  # Ensure the database service is up before starting the backend

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"  # Expose the frontend port
    networks:
      - app-network
    depends_on:
      - backend  # Ensure the backend is up before starting the frontend
    volumes:
      - ./frontend:/app # Mount the frontend source code for hot reloading
      - /app/node_modules  # Ensure node_modules is not overwritten

  db:
    image: mysql:8.4
    command: --mysql-native-password=ON
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - app-network
    volumes:
      - db-data:/var/lib/mysql
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local